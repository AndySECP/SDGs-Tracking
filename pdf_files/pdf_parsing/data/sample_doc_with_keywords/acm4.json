["Healthcare applications supported by the Internet of Things enable personalized monitoring of a patient in everyday settings.\nSuch applications often consist of battery-powered sensors coupled to smart gateways at the edge layer. Smart gateways offer\nseveral local computing and storage services (e.g., data aggregation, compression, local decision making), and also provide\nan opportunity for implementing local closed-loop optimization of different parameters of the sensor layer, particularly\nenergy consumption. To implement efficient optimization methods, information regarding the context and state of patients\nneed to be considered to find opportunities to adjust energy to demanded accuracy. Edge-assisted optimization can manage\nenergy consumption of the sensor layer but may also adversely affect the quality of sensed data, which could compromise the\nreliable detection of health deterioration risk factors. In this article, we propose two approaches: myopic and Markov decision\nprocesses (MDPs)\u2014to consider both energy constraints and risk factor requirements for achieving a twofold goal: energy\nsavings while satisfying accuracy requirements of abnormality detection in a patient\u2019s vital signs. Vital signs, including heart\nrate, respiration rate, and oxygen saturation, are extracted from a photoplethysmogram signal and errors of extracted features\nare compared to a ground truth that is modeled as a Gaussian distribution. We control the sensor\u2019s sensing energy to minimize\nthe power consumption while meeting a desired level of satisfactory detection performance. We present experimental results\non realistic case studies using a reconfigurable photoplethysmogram sensor in an IoT system, and show that compared to\nnonadaptive methods, myopic reduces an average of 16.9% in sensing energy consumption with the maximum probability of\nabnormality misdetection on the order of 0.17 in a 24-hour health monitoring system. In addition, over 4 weeks of monitoring,\nwe demonstrate that our MDP policy can extend the battery life on average of more than 2x while fulfilling the same average\nprobability of misdetection compared to the myopic method. We illustrate results comparing myopic, MDP, and nonadaptive\nmethods to monitor 14 subjects over 1 month.", "Interconnected low-cost and miniaturized wearable sensors are increasingly being proposed as an integral part\nof next-generation health care systems [1\u20133]. In a recent trend in this class of technological problems, these\nsensors are integrated within the Internet of Things (IoT) infrastructure to build distributed systems capable of\nperforming highly complex processing of the acquired signals. Of particular interest is the recently proposed\nedge computing paradigm [4, 5], where compute-capable devices\u2014the edge servers\u2014placed at the edge of the\nnetwork take over data processing tasks generated by interconnected devices. The low latency of the wireless\nlinks connecting the devices to the edge server makes these architectures capable of supporting time-sensitive\napplications [6, 7].", "Based on this general concept and architecture, we fully develop a specific application whose objective is\nto detect abnormalities in vital signs extracted from PPG sensors [8, 9]. PPG is a low-cost and miniaturized\noptical sensor widely used in medical and wearable sensors (e.g., fitness trackers, smart rings, smart earrings),\nwhich can continuously capture several vital signs such as heart rate, heart rate variability, respiration rate, and\nblood oxygenation [10]. Based on real-world data, we build a model for normal and abnormal signals, and define\ncorresponding regions in a feature space. In this context, the edge server will detect the current activity of the\nmonitor person and adjust the power used by the PPG sensor to ensure that the misdetection probability is below\na predetermined threshold while maximizing the lifetime of the sensor.", "The rest of the article is organized as follows. In Section 2, we provide background on the addressed problem\nand discuss related work. Section 3 describes the layered architecture of the system. The monitoring and detection\nframeworks are presented in Section 4. Section 5 discusses the process of extracting vital signs from a PPG signal\nand setup for collecting activity related data from various subjects. Section 6 presents and discusses numerical\nresults, and Section 7 concludes the article.", "the augmented (smart) version of these gateways [6] and their processing power to implement the core part of\nthe proposed context-aware control: to analyze the incoming data, plan for future configurations of the sensing\ndevice, and send the configuration data to the sensor layer. We remark that the three-tier architecture introduces\nchallenges. First, a coherent management of communications and task allocation among the layers necessitates\ncareful design. Then, the distribution of tasks inevitably introduces a delay in the propagation of information\nthroughout the system. Finally, a three-layer design introduces security and privacy concerns. Herein, we estab-\nlish a fast control loop using the edge server, which is connected to the sensor through a one-hop wireless link.\nWe remark that this strategy grants significant performance gain to the sensor, which has limited computation\nand energy resources.", "As shown in Figure 1, the edge server (e.g., a smart gateway) receives the sensing device information together\nwith the PPG and body acceleration signals and locates the subject\u2019s health status, activity level, and state of the\nsensing device. It then determines the sensing parameters and sends the new configuration to the sensor node.\nNote that the overall processing involves some additional steps, such as filtering, encryption, and compression,\nand sends the preprocessed data to the cloud server, which builds a statistical model of the person\u2019s temporal\nsequence of activities. The sensing and edge layer are connected through a wireless link, which supports data\ntransfer upstream from the sensors to the edge server and, in the proposed framework, control downstream from\nthe edge server to the sensors.", "We use a virtual private server as a cloud server. Similar to an edge device, the cloud server runs an Apache\nweb server on an Ubuntu Linux operating system (OS). A service on the Apache web server is responsible for\nreceiving data from the edge devices and storing them in the OS file system. A MySQL database server stores\nuser information and the index of their related files. These services gradually create a behavior and medical\nhistory of the user. We process the stored data through another service to create the weekly Markov model for\neach user. The server updates the edge device periodically with the latest users\u2019 Markov models.", "In this section, we first describe in detail the system setup in Section 5.1, and in Section 5.2, we describe the\nclinical trial at the base of this study and its output data.", "We now provide some specifics of the IoT system we developed. The sensing device, besides the actual PPG\nsensor, is equipped with a microcontroller to read data from the sensor, a Flash memory to store data temporar-\nily, and a wireless data transmission module to send the recorded data. We use the ESP8266-12E board, which\nintegrates all mentioned components in a single board. In the specific board we used, a full TCP/IP stack is in-\ntegrated with an L106 32-bit RISC microprocessor core running at 80 MHz, with 96 KB of on-chip SRAM and\n4 MB of external Flash memory. For the sensor, we use a MAX-REFDES117 PPG sensor board, which is highly\nconfigurable and provides a digitized signal through I2C communication. We program the microprocessor using\nthe C programming language to configure the sensor board internal registers. The sensing device connects to the\nedge device via a WiFi connection. It has a permanent configuration memory that records the user information\nand credentials of three different WiFi networks. At the beginning of the operation, the sensor node connects", "Fig. 6. Local data analysis to extract vital signs from raw PPG signals.", "to a WiFi network and asks the edge device to send initial configuration instructions, which include the PPG\nLED power, recording duration, and hibernate state duration. Next, the sensing device begins to record the PPG\nsignal on the Flash memory and then goes to the hibernation mode for the duration defined in the configuration\ninstructions. After the hibernation period, it connects again to the edge device via the WiFi connection, sends\nthe recorded data, waits for the edge device to process the transferred data, receives the results as a new set of\nconfiguration instructions, and initiates a new recording cycle. Note that the sensor turns the radio communica-\ntion circuitry off during the recording and hibernation to save energy. Table 1 summarizes the system\u2019s power\nconsumption specifications.", "The edge device is a Linux-based computer running an Apache web server. It receives each set of the recorded\ndata from the sensing device via several HTTP Upload POST requests, merges data chunks into one file, analyzes\nthe data, and returns the new configuration in reply to the latest HTTP request. As shown in Figure 6, local data\nanalysis on the edge device consists of two sequential phases: biosignal extraction and vital signs detection.", "To evaluate the accuracy model of the PPG sensor\u2019s measurements, we first collect data for the PPG signal during\ndifferent activities. We conduct our 5-hour experiment with 25 different combinations, in which a healthy subject\nis monitored during \u201cSleeping,\u201d \u201cSitting,\u201d \u201cWalking,\u201d \u201cJogging,\u201d and \u201cRunning\u201d and the sensor\u2019s current level is", "To model and test our proposed algorithms, physical data is recorded. The physical activity data is part of a\nlongitudinal study conducted to investigate the maternal body changes on pregnant women for 7 months (i.e., 6\nmonths of pregnancy and 1 month postpartum). The study was performed in collaboration with the Department\nof Nursing Science, University of Turku (UTU) and Turku University Hospital, and in accordance with the code\nof ethics of the World Medical Association (Declaration of Helsinki). In addition, it was approved by the joint\nethics committee of the hospital district of Southwest Finland (35/1801/2016) and Turku University Hospital.", "Between May 2016 and June 2017, 20 pregnant women were selected and recruited in Southern Finland, con-\nsidering different criteria such as \u201csingleton pregnancy,\u201d \u201c18 as the lower age limit,\u201d and \u201cgestational age less than\n15 weeks.\u201d Data collection was performed 24/7 via a lightweight fitness tracker (i.e., Garmin Vivosmart HR) [31]\nconsisting of a PPG sensor and and IMU. The data were regularly transferred to remote computers for storage\nand postprocessing. The physical activity data utilized in this work was abstracted from the user\u2019s steps and\nhand movements in every 15-minute interval [32, 33]. Data from six subjects were rejected due to discontinuity\nin data recording, with more than 50% of missing data. The output of the study allowed us to build the transi-\ntion probabilities capturing the dynamics of the activity engaged by the monitored person. Note that the model\nevolves over time and is specific to a person. Therefore, the cloud layer continuously updates the model and\nperiodically sends it to the edge server.", "Internet-of-Things and big data for smarter healthcare: From device to architecture, applications and analytics. Future Generation\nComputer Systems 78, Pt. 2 (2018), 583\u2013586.", "[21] Gitanjali Pradhan, Rajni Gupta, and Suparna Biswasz. 2018. Study and simulation of WBAN MAC protocols for emergency data traffic\nin healthcare. In Proceedings of the 2018 5th International Conference on Emerging Applications of Information Technology (EAIT\u201918).\nIEEE, Los Alamitos, CA, 1\u20134."]